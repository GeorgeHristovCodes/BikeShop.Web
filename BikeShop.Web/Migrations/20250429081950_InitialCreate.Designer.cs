// <auto-generated />
using System;
using BikeShop.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BikeShop.Web.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250429081950_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BicycleImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BicycleId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BicycleId");

                    b.ToTable("BicycleImages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BicycleId = 1,
                            ImageUrl = "/images/demo-bicycles/road1-1.jpg"
                        },
                        new
                        {
                            Id = 2,
                            BicycleId = 1,
                            ImageUrl = "/images/demo-bicycles/road1-2.jpg"
                        },
                        new
                        {
                            Id = 3,
                            BicycleId = 1,
                            ImageUrl = "/images/demo-bicycles/road1-3.jpg"
                        },
                        new
                        {
                            Id = 4,
                            BicycleId = 2,
                            ImageUrl = "/images/demo-bicycles/road2-1.jpg"
                        },
                        new
                        {
                            Id = 5,
                            BicycleId = 2,
                            ImageUrl = "/images/demo-bicycles/road2-2.jpg"
                        },
                        new
                        {
                            Id = 6,
                            BicycleId = 2,
                            ImageUrl = "/images/demo-bicycles/road2-3.jpg"
                        },
                        new
                        {
                            Id = 7,
                            BicycleId = 3,
                            ImageUrl = "/images/demo-bicycles/hardtail1-1.jpg"
                        },
                        new
                        {
                            Id = 8,
                            BicycleId = 3,
                            ImageUrl = "/images/demo-bicycles/hardtail1-2.jpg"
                        },
                        new
                        {
                            Id = 9,
                            BicycleId = 3,
                            ImageUrl = "/images/demo-bicycles/hardtail1-3.jpg"
                        },
                        new
                        {
                            Id = 10,
                            BicycleId = 4,
                            ImageUrl = "/images/demo-bicycles/hardtail2-1.jpg"
                        },
                        new
                        {
                            Id = 11,
                            BicycleId = 4,
                            ImageUrl = "/images/demo-bicycles/hardtail2-2.jpg"
                        },
                        new
                        {
                            Id = 12,
                            BicycleId = 4,
                            ImageUrl = "/images/demo-bicycles/hardtail2-3.jpg"
                        },
                        new
                        {
                            Id = 13,
                            BicycleId = 5,
                            ImageUrl = "/images/demo-bicycles/full1-1.jpg"
                        },
                        new
                        {
                            Id = 14,
                            BicycleId = 5,
                            ImageUrl = "/images/demo-bicycles/full1-2.jpg"
                        },
                        new
                        {
                            Id = 15,
                            BicycleId = 5,
                            ImageUrl = "/images/demo-bicycles/full1-3.jpg"
                        },
                        new
                        {
                            Id = 16,
                            BicycleId = 6,
                            ImageUrl = "/images/demo-bicycles/full2-1.jpg"
                        },
                        new
                        {
                            Id = 17,
                            BicycleId = 6,
                            ImageUrl = "/images/demo-bicycles/full2-2.jpg"
                        },
                        new
                        {
                            Id = 18,
                            BicycleId = 6,
                            ImageUrl = "/images/demo-bicycles/full2-3.jpg"
                        },
                        new
                        {
                            Id = 19,
                            BicycleId = 7,
                            ImageUrl = "/images/demo-bicycles/city1-1.jpg"
                        },
                        new
                        {
                            Id = 20,
                            BicycleId = 7,
                            ImageUrl = "/images/demo-bicycles/city1-2.jpg"
                        },
                        new
                        {
                            Id = 21,
                            BicycleId = 7,
                            ImageUrl = "/images/demo-bicycles/city1-3.jpg"
                        },
                        new
                        {
                            Id = 22,
                            BicycleId = 8,
                            ImageUrl = "/images/demo-bicycles/city2-1.jpg"
                        },
                        new
                        {
                            Id = 23,
                            BicycleId = 8,
                            ImageUrl = "/images/demo-bicycles/city2-2.jpg"
                        },
                        new
                        {
                            Id = 24,
                            BicycleId = 8,
                            ImageUrl = "/images/demo-bicycles/city2-3.jpg"
                        },
                        new
                        {
                            Id = 25,
                            BicycleId = 9,
                            ImageUrl = "/images/demo-bicycles/kid1-1.jpg"
                        },
                        new
                        {
                            Id = 26,
                            BicycleId = 9,
                            ImageUrl = "/images/demo-bicycles/kid1-2.jpg"
                        },
                        new
                        {
                            Id = 27,
                            BicycleId = 9,
                            ImageUrl = "/images/demo-bicycles/kid1-3.jpg"
                        },
                        new
                        {
                            Id = 28,
                            BicycleId = 10,
                            ImageUrl = "/images/demo-bicycles/kid2-1.jpg"
                        },
                        new
                        {
                            Id = 29,
                            BicycleId = 10,
                            ImageUrl = "/images/demo-bicycles/kid2-2.jpg"
                        },
                        new
                        {
                            Id = 30,
                            BicycleId = 10,
                            ImageUrl = "/images/demo-bicycles/kid2-3.jpg"
                        },
                        new
                        {
                            Id = 31,
                            BicycleId = 11,
                            ImageUrl = "/images/demo-bicycles/road-rent1.jpg"
                        },
                        new
                        {
                            Id = 32,
                            BicycleId = 11,
                            ImageUrl = "/images/demo-bicycles/road-rent1-2.jpg"
                        },
                        new
                        {
                            Id = 33,
                            BicycleId = 11,
                            ImageUrl = "/images/demo-bicycles/road-rent1-3.jpg"
                        },
                        new
                        {
                            Id = 34,
                            BicycleId = 12,
                            ImageUrl = "/images/demo-bicycles/road-rent2.jpg"
                        },
                        new
                        {
                            Id = 35,
                            BicycleId = 12,
                            ImageUrl = "/images/demo-bicycles/road-rent2-2.jpg"
                        },
                        new
                        {
                            Id = 36,
                            BicycleId = 12,
                            ImageUrl = "/images/demo-bicycles/road-rent2-3.jpg"
                        },
                        new
                        {
                            Id = 37,
                            BicycleId = 13,
                            ImageUrl = "/images/demo-bicycles/hardtail-rent1.jpg"
                        },
                        new
                        {
                            Id = 38,
                            BicycleId = 13,
                            ImageUrl = "/images/demo-bicycles/hardtail-rent1-2.jpg"
                        },
                        new
                        {
                            Id = 39,
                            BicycleId = 13,
                            ImageUrl = "/images/demo-bicycles/hardtail-rent1-3.jpg"
                        },
                        new
                        {
                            Id = 40,
                            BicycleId = 14,
                            ImageUrl = "/images/demo-bicycles/hardtail-rent2.jpg"
                        },
                        new
                        {
                            Id = 41,
                            BicycleId = 14,
                            ImageUrl = "/images/demo-bicycles/hardtail-rent2-2.jpg"
                        },
                        new
                        {
                            Id = 42,
                            BicycleId = 14,
                            ImageUrl = "/images/demo-bicycles/hardtail-rent2-3.jpg"
                        },
                        new
                        {
                            Id = 43,
                            BicycleId = 15,
                            ImageUrl = "/images/demo-bicycles/full-rent1.jpg"
                        },
                        new
                        {
                            Id = 44,
                            BicycleId = 15,
                            ImageUrl = "/images/demo-bicycles/full-rent1-2.jpg"
                        },
                        new
                        {
                            Id = 45,
                            BicycleId = 15,
                            ImageUrl = "/images/demo-bicycles/full-rent1-3.jpg"
                        },
                        new
                        {
                            Id = 46,
                            BicycleId = 16,
                            ImageUrl = "/images/demo-bicycles/full-rent2.jpg"
                        },
                        new
                        {
                            Id = 47,
                            BicycleId = 16,
                            ImageUrl = "/images/demo-bicycles/full-rent2-2.jpg"
                        },
                        new
                        {
                            Id = 48,
                            BicycleId = 16,
                            ImageUrl = "/images/demo-bicycles/full-rent2-3.jpg"
                        },
                        new
                        {
                            Id = 49,
                            BicycleId = 17,
                            ImageUrl = "/images/demo-bicycles/city-rent1.jpg"
                        },
                        new
                        {
                            Id = 50,
                            BicycleId = 17,
                            ImageUrl = "/images/demo-bicycles/city-rent1-2.jpg"
                        },
                        new
                        {
                            Id = 51,
                            BicycleId = 17,
                            ImageUrl = "/images/demo-bicycles/city-rent1-3.jpg"
                        },
                        new
                        {
                            Id = 52,
                            BicycleId = 18,
                            ImageUrl = "/images/demo-bicycles/city-rent2.jpg"
                        },
                        new
                        {
                            Id = 53,
                            BicycleId = 18,
                            ImageUrl = "/images/demo-bicycles/city-rent2-2.jpg"
                        },
                        new
                        {
                            Id = 54,
                            BicycleId = 18,
                            ImageUrl = "/images/demo-bicycles/city-rent2-3.jpg"
                        },
                        new
                        {
                            Id = 55,
                            BicycleId = 19,
                            ImageUrl = "/images/demo-bicycles/kid-rent1.jpg"
                        },
                        new
                        {
                            Id = 56,
                            BicycleId = 19,
                            ImageUrl = "/images/demo-bicycles/kid-rent1-2.jpg"
                        },
                        new
                        {
                            Id = 57,
                            BicycleId = 19,
                            ImageUrl = "/images/demo-bicycles/kid-rent1-3.jpg"
                        },
                        new
                        {
                            Id = 58,
                            BicycleId = 20,
                            ImageUrl = "/images/demo-bicycles/kid-rent2.jpg"
                        },
                        new
                        {
                            Id = 59,
                            BicycleId = 20,
                            ImageUrl = "/images/demo-bicycles/kid-rent2-2.jpg"
                        },
                        new
                        {
                            Id = 60,
                            BicycleId = 20,
                            ImageUrl = "/images/demo-bicycles/kid-rent2-3.jpg"
                        });
                });

            modelBuilder.Entity("BikeShop.Web.Models.Accessories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Accessories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "DRAG",
                            Category = 0,
                            Description = "Лека и удобна каска за градски и планински маршрути.",
                            ImageUrl = "/images/demo-accessories/helmet1.jpg",
                            Name = "Каска DRAG One",
                            Price = 89m,
                            Status = 0,
                            Stock = 12
                        },
                        new
                        {
                            Id = 2,
                            Brand = "SPECIALIZED",
                            Category = 0,
                            Description = "Професионална каска с вентилация и регулируема лента.",
                            ImageUrl = "/images/demo-accessories/helmet2.jpg",
                            Name = "Каска Specialized Pro",
                            Price = 119m,
                            Status = 0,
                            Stock = 8
                        },
                        new
                        {
                            Id = 3,
                            Brand = "NS BIKES",
                            Category = 0,
                            Description = "Градска каска със стилен дизайн и защита.",
                            ImageUrl = "/images/demo-accessories/helmet3.jpg",
                            Name = "Каска CitySafe",
                            Price = 65m,
                            Status = 0,
                            Stock = 15
                        },
                        new
                        {
                            Id = 4,
                            Brand = "DRAG",
                            Category = 1,
                            Description = "Къси ръкавици за лятно каране с дишаща материя.",
                            ImageUrl = "/images/demo-accessories/gloves1.jpg",
                            Name = "Ръкавици DRAG Short",
                            Price = 35m,
                            Status = 0,
                            Stock = 20
                        },
                        new
                        {
                            Id = 5,
                            Brand = "NS BIKES",
                            Category = 1,
                            Description = "Гумени елементи за по-добро сцепление и комфорт.",
                            ImageUrl = "/images/demo-accessories/gloves2.jpg",
                            Name = "Ръкавици NS Grip",
                            Price = 42m,
                            Status = 0,
                            Stock = 14
                        },
                        new
                        {
                            Id = 6,
                            Brand = "SPECIALIZED",
                            Category = 1,
                            Description = "Ежедневни ръкавици за кратки разходки.",
                            ImageUrl = "/images/demo-accessories/gloves3.jpg",
                            Name = "Ръкавици UrbanRide",
                            Price = 29m,
                            Status = 0,
                            Stock = 18
                        },
                        new
                        {
                            Id = 7,
                            Brand = "DRAG",
                            Category = 2,
                            Description = "Лека преносима помпа с универсален вентил.",
                            ImageUrl = "/images/demo-accessories/pump1.jpg",
                            Name = "Помпа DRAG Mini",
                            Price = 22m,
                            Status = 0,
                            Stock = 25
                        },
                        new
                        {
                            Id = 8,
                            Brand = "SPECIALIZED",
                            Category = 2,
                            Description = "Помпа с манометър и алуминиево тяло.",
                            ImageUrl = "/images/demo-accessories/pump2.jpg",
                            Name = "Помпа Specialized Air",
                            Price = 45m,
                            Status = 0,
                            Stock = 10
                        },
                        new
                        {
                            Id = 9,
                            Brand = "NS BIKES",
                            Category = 2,
                            Description = "Здрава помпа с удобна дръжка за планински велосипеди.",
                            ImageUrl = "/images/demo-accessories/pump3.jpg",
                            Name = "Помпа TrailPump",
                            Price = 35m,
                            Status = 0,
                            Stock = 18
                        },
                        new
                        {
                            Id = 10,
                            Brand = "SPECIALIZED",
                            Category = 3,
                            Description = "Комплект с най-нужните инструменти за пътя.",
                            ImageUrl = "/images/demo-accessories/tool1.jpg",
                            Name = "Инструментален комплект 9 в 1",
                            Price = 55m,
                            Status = 0,
                            Stock = 11
                        },
                        new
                        {
                            Id = 11,
                            Brand = "NS BIKES",
                            Category = 3,
                            Description = "Компактен мултиинструмент за чанта или джоб.",
                            ImageUrl = "/images/demo-accessories/tool2.jpg",
                            Name = "Мултиинструмент NS",
                            Price = 49m,
                            Status = 0,
                            Stock = 7
                        },
                        new
                        {
                            Id = 12,
                            Brand = "DRAG",
                            Category = 3,
                            Description = "Инструментариум за домашни ремонти на велосипеда.",
                            ImageUrl = "/images/demo-accessories/tool3.jpg",
                            Name = "Инструменти HomeFix",
                            Price = 60m,
                            Status = 0,
                            Stock = 6
                        },
                        new
                        {
                            Id = 13,
                            Brand = "DRAG",
                            Category = 4,
                            Description = "Подсилени наколенки за планинско каране.",
                            ImageUrl = "/images/demo-accessories/knee1.jpg",
                            Name = "Наколенки DRAG Protect",
                            Price = 75m,
                            Status = 0,
                            Stock = 10
                        },
                        new
                        {
                            Id = 14,
                            Brand = "NS BIKES",
                            Category = 4,
                            Description = "Меки и удобни наколенки с проветрив материал.",
                            ImageUrl = "/images/demo-accessories/knee2.jpg",
                            Name = "Наколенки Trail Soft",
                            Price = 59m,
                            Status = 0,
                            Stock = 12
                        },
                        new
                        {
                            Id = 15,
                            Brand = "SPECIALIZED",
                            Category = 4,
                            Description = "Градски стил с основна защита.",
                            ImageUrl = "/images/demo-accessories/knee3.jpg",
                            Name = "Наколенки CityFlex",
                            Price = 49m,
                            Status = 0,
                            Stock = 9
                        },
                        new
                        {
                            Id = 16,
                            Brand = "DRAG",
                            Category = 5,
                            Description = "Здрава защита за лакти при агресивно каране.",
                            ImageUrl = "/images/demo-accessories/elbow1.jpg",
                            Name = "Лакътници DRAG Shield",
                            Price = 55m,
                            Status = 0,
                            Stock = 10
                        },
                        new
                        {
                            Id = 17,
                            Brand = "SPECIALIZED",
                            Category = 5,
                            Description = "Защита с гъвкав дизайн и комфортна подложка.",
                            ImageUrl = "/images/demo-accessories/elbow2.jpg",
                            Name = "Лакътници UrbanPad",
                            Price = 38m,
                            Status = 0,
                            Stock = 12
                        },
                        new
                        {
                            Id = 18,
                            Brand = "NS BIKES",
                            Category = 5,
                            Description = "Леки лакътници за ежедневно каране.",
                            ImageUrl = "/images/demo-accessories/elbow3.jpg",
                            Name = "Лакътници LightRide",
                            Price = 29m,
                            Status = 0,
                            Stock = 15
                        },
                        new
                        {
                            Id = 19,
                            Brand = "DRAG",
                            Category = 6,
                            Description = "Слънцезащитни очила с UV филтър.",
                            ImageUrl = "/images/demo-accessories/glasses1.jpg",
                            Name = "Очила DRAG ProVision",
                            Price = 89m,
                            Status = 0,
                            Stock = 13
                        },
                        new
                        {
                            Id = 20,
                            Brand = "NS BIKES",
                            Category = 6,
                            Description = "Спортен дизайн и сменяеми стъкла.",
                            ImageUrl = "/images/demo-accessories/glasses2.jpg",
                            Name = "Очила TrailVision",
                            Price = 95m,
                            Status = 0,
                            Stock = 11
                        },
                        new
                        {
                            Id = 21,
                            Brand = "SPECIALIZED",
                            Category = 6,
                            Description = "Очилата за модерни велосипедисти в града.",
                            ImageUrl = "/images/demo-accessories/glasses3.jpg",
                            Name = "Очила CityView",
                            Price = 70m,
                            Status = 0,
                            Stock = 16
                        });
                });

            modelBuilder.Entity("BikeShop.Web.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("BikeShop.Web.Models.Bicycle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Category")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FrameSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bicycles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Brand = "DRAG",
                            Category = 0,
                            Description = "Лек и бърз шосеен велосипед, идеален за състезания и дълги карания по асфалт.",
                            FrameSize = "M",
                            ImageUrl = "/images/demo-bicycles/road1-1.jpg",
                            IsAvailable = true,
                            Name = "Drag C1 Road",
                            Price = 3200m,
                            Quantity = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 2,
                            Brand = "SPECIALIZED",
                            Category = 0,
                            Description = "Надежден и ефективен шосеен велосипед с отлична аеродинамика.",
                            FrameSize = "L",
                            ImageUrl = "/images/demo-bicycles/road2-1.jpg",
                            IsAvailable = true,
                            Name = "Specialized Allez",
                            Price = 4600m,
                            Quantity = 3,
                            Type = 1
                        },
                        new
                        {
                            Id = 3,
                            Brand = "NS BIKES",
                            Category = 1,
                            Description = "Маневрен хардтейл за трикове и каране в градска среда.",
                            FrameSize = "S",
                            ImageUrl = "/images/demo-bicycles/hardtail1-1.jpg",
                            IsAvailable = true,
                            Name = "NS Bikes Zircus",
                            Price = 2800m,
                            Quantity = 4,
                            Type = 1
                        },
                        new
                        {
                            Id = 4,
                            Brand = "DRAG",
                            Category = 1,
                            Description = "Планински велосипед с твърда рамка, идеален за off-road каране.",
                            FrameSize = "M",
                            ImageUrl = "/images/demo-bicycles/hardtail2-1.jpg",
                            IsAvailable = true,
                            Name = "Drag Hardy Pro",
                            Price = 3000m,
                            Quantity = 7,
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            Brand = "YT INDUSTRIES",
                            Category = 2,
                            Description = "Сериозен планински велосипед с пълно окачване за максимален контрол по пресечени терени.",
                            FrameSize = "L",
                            ImageUrl = "/images/demo-bicycles/full1-1.jpg",
                            IsAvailable = true,
                            Name = "YT Jeffsy Core",
                            Price = 5200m,
                            Quantity = 6,
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            Brand = "SPECIALIZED",
                            Category = 2,
                            Description = "Премиум MTB за тежки терени. Със здрава рамка и модерна геометрия.",
                            FrameSize = "XL",
                            ImageUrl = "/images/demo-bicycles/full2-1.jpg",
                            IsAvailable = true,
                            Name = "Specialized Stumpjumper Evo",
                            Price = 5800m,
                            Quantity = 2,
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            Brand = "DRAG",
                            Category = 3,
                            Description = "Удобен и стилен градски велосипед – идеален за ежедневно придвижване.",
                            FrameSize = "M",
                            ImageUrl = "/images/demo-bicycles/city1-1.jpg",
                            IsAvailable = true,
                            Name = "Drag City Rider",
                            Price = 2200m,
                            Quantity = 8,
                            Type = 1
                        },
                        new
                        {
                            Id = 8,
                            Brand = "NS BIKES",
                            Category = 3,
                            Description = "Хибриден велосипед за град и офроуд. Съчетава комфорт и здравина.",
                            FrameSize = "L",
                            ImageUrl = "/images/demo-bicycles/city2-1.jpg",
                            IsAvailable = true,
                            Name = "NS Bikes Metropolis",
                            Price = 2500m,
                            Quantity = 4,
                            Type = 1
                        },
                        new
                        {
                            Id = 9,
                            Brand = "DRAG",
                            Category = 4,
                            Description = "Цветен велосипед за деца от 5 до 8 години. Сигурен и лек.",
                            FrameSize = "XS",
                            ImageUrl = "/images/demo-bicycles/kid1-1.jpg",
                            IsAvailable = true,
                            Name = "Drag Kid 20\"",
                            Price = 950m,
                            Quantity = 10,
                            Type = 1
                        },
                        new
                        {
                            Id = 10,
                            Brand = "YT INDUSTRIES",
                            Category = 4,
                            Description = "Качествен велосипед за деца от 8 до 12 г. Стабилен и удобен за каране.",
                            FrameSize = "S",
                            ImageUrl = "/images/demo-bicycles/kid2-1.jpg",
                            IsAvailable = true,
                            Name = "YT Primus 24\"",
                            Price = 1050m,
                            Quantity = 9,
                            Type = 1
                        },
                        new
                        {
                            Id = 11,
                            Brand = "DRAG",
                            Category = 0,
                            Description = "Шосеен велосипед за наем с алуминиева рамка, лек и комфортен.",
                            FrameSize = "M",
                            ImageUrl = "/images/demo-bicycles/road-rent1.jpg",
                            IsAvailable = true,
                            Name = "Drag X-Rent Road",
                            Price = 25m,
                            Quantity = 3,
                            Type = 0
                        },
                        new
                        {
                            Id = 12,
                            Brand = "SPECIALIZED",
                            Category = 0,
                            Description = "Шосейно колело за бързо придвижване в града и околностите.",
                            FrameSize = "L",
                            ImageUrl = "/images/demo-bicycles/road-rent2.jpg",
                            IsAvailable = true,
                            Name = "Specialized Allez Rent",
                            Price = 30m,
                            Quantity = 4,
                            Type = 0
                        },
                        new
                        {
                            Id = 13,
                            Brand = "NS BIKES",
                            Category = 1,
                            Description = "Хардтейл колело за планинско каране и скокове – перфектно за наем.",
                            FrameSize = "S",
                            ImageUrl = "/images/demo-bicycles/hardtail-rent1.jpg",
                            IsAvailable = true,
                            Name = "NS Rent Zircus",
                            Price = 35m,
                            Quantity = 5,
                            Type = 0
                        },
                        new
                        {
                            Id = 14,
                            Brand = "DRAG",
                            Category = 1,
                            Description = "Здрав велосипед под наем, идеален за офроуд разходки в планината.",
                            FrameSize = "M",
                            ImageUrl = "/images/demo-bicycles/hardtail-rent2.jpg",
                            IsAvailable = true,
                            Name = "Drag Hardy Rent",
                            Price = 38m,
                            Quantity = 6,
                            Type = 0
                        },
                        new
                        {
                            Id = 15,
                            Brand = "YT INDUSTRIES",
                            Category = 2,
                            Description = "Пълноокачен велосипед за под наем с максимално удобство по тежък терен.",
                            FrameSize = "L",
                            ImageUrl = "/images/demo-bicycles/full-rent1.jpg",
                            IsAvailable = true,
                            Name = "YT Jeffsy Rent",
                            Price = 45m,
                            Quantity = 3,
                            Type = 0
                        },
                        new
                        {
                            Id = 16,
                            Brand = "SPECIALIZED",
                            Category = 2,
                            Description = "Професионален MTB за сериозни трасета, достъпен под наем.",
                            FrameSize = "XL",
                            ImageUrl = "/images/demo-bicycles/full-rent2.jpg",
                            IsAvailable = true,
                            Name = "Stumpjumper Evo Rent",
                            Price = 48m,
                            Quantity = 2,
                            Type = 0
                        },
                        new
                        {
                            Id = 17,
                            Brand = "DRAG",
                            Category = 3,
                            Description = "Градски велосипед под наем за комфортно придвижване.",
                            FrameSize = "M",
                            ImageUrl = "/images/demo-bicycles/city-rent1.jpg",
                            IsAvailable = true,
                            Name = "Drag City Rent",
                            Price = 20m,
                            Quantity = 5,
                            Type = 0
                        },
                        new
                        {
                            Id = 18,
                            Brand = "NS BIKES",
                            Category = 3,
                            Description = "Стилен градски велосипед, удобен за кратки наеми.",
                            FrameSize = "L",
                            ImageUrl = "/images/demo-bicycles/city-rent2.jpg",
                            IsAvailable = true,
                            Name = "NS City Urban Rent",
                            Price = 22m,
                            Quantity = 4,
                            Type = 0
                        },
                        new
                        {
                            Id = 19,
                            Brand = "DRAG",
                            Category = 4,
                            Description = "Безопасен детски велосипед за наем, подходящ за деца 5-8г.",
                            FrameSize = "XS",
                            ImageUrl = "/images/demo-bicycles/kid-rent1.jpg",
                            IsAvailable = true,
                            Name = "Drag Kiddo Rent 20\"",
                            Price = 12m,
                            Quantity = 4,
                            Type = 0
                        },
                        new
                        {
                            Id = 20,
                            Brand = "YT INDUSTRIES",
                            Category = 4,
                            Description = "Детски велосипед за деца 8-12г. Подходящ за разходки в парка.",
                            FrameSize = "S",
                            ImageUrl = "/images/demo-bicycles/kid-rent2.jpg",
                            IsAvailable = true,
                            Name = "YT Primus Rent 24\"",
                            Price = 14m,
                            Quantity = 5,
                            Type = 0
                        });
                });

            modelBuilder.Entity("BikeShop.Web.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccessoriesId")
                        .HasColumnType("int");

                    b.Property<int?>("BicycleId")
                        .HasColumnType("int");

                    b.Property<string>("CustomerCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryStreet")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeliveryStreetNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelivery")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("AccessoriesId");

                    b.HasIndex("BicycleId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BikeShop.Web.Models.Rental", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BicycleId")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BicycleId");

                    b.HasIndex("UserId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("CartItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("AccessoriesId")
                        .HasColumnType("int");

                    b.Property<int?>("BicycleId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RentalEndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("RentalStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AccessoriesId");

                    b.HasIndex("BicycleId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("BicycleImage", b =>
                {
                    b.HasOne("BikeShop.Web.Models.Bicycle", "Bicycle")
                        .WithMany("Images")
                        .HasForeignKey("BicycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bicycle");
                });

            modelBuilder.Entity("BikeShop.Web.Models.Order", b =>
                {
                    b.HasOne("BikeShop.Web.Models.Accessories", "Accessories")
                        .WithMany()
                        .HasForeignKey("AccessoriesId");

                    b.HasOne("BikeShop.Web.Models.Bicycle", "Bicycle")
                        .WithMany()
                        .HasForeignKey("BicycleId");

                    b.HasOne("BikeShop.Web.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Accessories");

                    b.Navigation("Bicycle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BikeShop.Web.Models.Rental", b =>
                {
                    b.HasOne("BikeShop.Web.Models.Bicycle", "Bicycle")
                        .WithMany()
                        .HasForeignKey("BicycleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BikeShop.Web.Models.ApplicationUser", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bicycle");

                    b.Navigation("User");
                });

            modelBuilder.Entity("CartItem", b =>
                {
                    b.HasOne("BikeShop.Web.Models.Accessories", "Accessories")
                        .WithMany()
                        .HasForeignKey("AccessoriesId");

                    b.HasOne("BikeShop.Web.Models.Bicycle", "Bicycle")
                        .WithMany()
                        .HasForeignKey("BicycleId");

                    b.Navigation("Accessories");

                    b.Navigation("Bicycle");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("BikeShop.Web.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("BikeShop.Web.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BikeShop.Web.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("BikeShop.Web.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BikeShop.Web.Models.Bicycle", b =>
                {
                    b.Navigation("Images");
                });
#pragma warning restore 612, 618
        }
    }
}
